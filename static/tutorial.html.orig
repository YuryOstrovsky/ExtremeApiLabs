<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Tutorial</title>
<style>
/* Style the tab content */
.tabcontent {
  display: none;
}

/* Style the tab buttons */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}

          #countdown {
        font-size: 0.8em; /* Smaller font size */
            color: #333; /* Nicer color */
            padding: 10px 20px;
            background-color: #fff;
            font-weight: bold; /* Bold font */
        }
                .popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            text-align: center;
        }
        .popup button {
            margin: 10px;
            padding: 10px 20px;
            font-size: 1em;
        }



</style>
</head>
<body>


<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'XIQClass')">XIQ Training Class</button>
  <button class="tablinks" onclick="openTab(event, 'XIQ-CClass')">XIQ-C Training Class</button>
</div>

<div id="XIQClass" class="tabcontent">
  <iframe src="static/XIQClass.html" style="width:100%;height:500px;border:none;"></iframe>
</div>

<div id="XIQ-CClass" class="tabcontent">
  <iframe src="static/XIQCClass.html" style="width:100%;height:500px;border:none;"></iframe>
</div>


<!-- Introductory content -->
<div id="introductoryContent">
  <h2>Welcome to the Extreme Networks API online training classes</h2>
  <p>This tutorial is designed to help you navigate through the fundamentals of ExtremeCloud&trade; IQ and ExtremeCloud&trade; IQ-C basic API scripting using Python within Jupyter Notebook. Please  click on the tabs above to delve into each training class.</p>
</div>

<script>
function openTab(evt, tabName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";

  // Hide the introductory content when a tab is clicked
  document.getElementById("introductoryContent").style.display = "none";
}
</script>

    <script>
        function getNext4AM() {
            const now = new Date();
            const next4AM = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), 4, 0, 0));

            if (now.getUTCHours() >= 4) {
                next4AM.setUTCDate(next4AM.getUTCDate() + 1);
            }

            return next4AM;
        }

        function updateCountdown() {
            const now = new Date();
            const next4AM = getNext4AM();
            const timeRemaining = next4AM - now;

            const hours = Math.floor((timeRemaining / (1000 * 60 * 60)) % 24);
            const minutes = Math.floor((timeRemaining / (1000 * 60)) % 60);
            const seconds = Math.floor((timeRemaining / 1000) % 60);

            document.getElementById("countdown").innerHTML = `Session will expire in: ${hours.toString().padStart(2, '0')}h ${minutes.toString().padStart(2, '0')}m ${seconds.toString().padStart(2, '0')}s`;

            // Check if less than 1 minute left
            if (timeRemaining < 60000) { // 60,000 milliseconds = 1 minute
                setTimeout(showSessionExpiredPopup, timeRemaining); // Show popup when session expires
            }

            // Check if time is up
            if (timeRemaining < 0) {
                clearInterval(timerInterval);
                document.getElementById("countdown").innerHTML = "Time's up!";
            }
        }

        function showSessionExpiredPopup() {
            // Create popup
            const popup = document.createElement('div');
            popup.className = 'popup';
            popup.innerHTML = `
                <div class="popup-content">
                    <p>Your session expired. Please refresh the page.</p>
                    <button onclick="redirectToNewPage()">Refresh Page</button>
                    <button onclick="cancelPopup()">Cancel</button>
                </div>
            `;
            document.body.appendChild(popup);
        }

        function redirectToNewPage() {
            window.location.href = "https://apilabs.extremewireless.ca:5000";
        }

        function cancelPopup() {
            const popup = document.querySelector('.popup');
            if (popup) {
                popup.remove();
            }
        }

        const timerInterval = setInterval(updateCountdown, 1000);
        updateCountdown(); // Initial call to display the countdown immediately
    </script>



</body>
</html>


